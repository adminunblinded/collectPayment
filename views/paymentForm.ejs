<!-- paymentForm.ejs -->
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Payment Form</title>
  <script src="https://js.stripe.com/v3/"></script>
  <link rel="stylesheet" href="styles.css">
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
</head>
<body>

<form id="payment-form">
  <label for="name-on-card">Name on Card</label>
  <input type="text" id="name-on-card" name="name-on-card" required>
  
  <label for="email">Email</label>
  <input type="email" id="email" name="email" required>

  <div id="card-element">
    <!-- A Stripe Element will be inserted here. -->
  </div>

  <!-- Used to display form errors. -->
  <div id="card-errors" role="alert"></div>

  <button id="submit-button" type="submit">Add Payment Method</button>
</form>

<script>
  // Create a Stripe client.
  var stripe = Stripe('<%= stripePublishableKey %>');

  // Create an instance of Elements.
  var elements = stripe.elements();

  // Custom styling can be passed to options when creating an Element.
  var style = {
    base: {
      fontSize: '16px',
      color: '#32325d',
    }
  };

  var card = elements.create('card', {style: style});
  card.mount('#card-element');

  // Handle real-time validation errors from the card Element.
  card.addEventListener('change', function(event) {
    var displayError = document.getElementById('card-errors');
    if (event.error) {
      displayError.textContent = event.error.message;
    } else {
      displayError.textContent = '';
    }
  });

  var form = document.getElementById('payment-form');
  form.addEventListener('submit', function(event) {
    event.preventDefault();

    stripe.createToken(card, {
      name: document.getElementById('name-on-card').value,
      email: document.getElementById('email').value
    }).then(function(result) {
      if (result.error) {
        // Inform the user if there was an error.
        var errorElement = document.getElementById('card-errors');
        errorElement.textContent = result.error.message;
      } else {
        // Send the form data to the server using AJAX
        fetch('/submit', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({
            token: result.token.id,
            name: document.getElementById('name-on-card').value,
            email: document.getElementById('email').value
          })
        })
        .then(response => response.text())
        .then(data => {
          console.log(data); // Log the response from the server
          Swal.fire({
            icon: 'success',
            title: 'Card Added Successfully',
            showConfirmButton: false,
            timer: 1500,
            customClass: {
              container: 'responsive-swal' // Custom CSS class for responsive Swal alert
            }
          });
        })
        .catch(error => {
          console.error('Error:', error);
          Swal.fire({
            icon: 'error',
            title: 'Oops...',
            text: 'Something went wrong!',
            customClass: {
              container: 'responsive-swal' // Custom CSS class for responsive Swal alert
            }
          });
        });
      }
    });
  });
</script>

</body>
</html>
